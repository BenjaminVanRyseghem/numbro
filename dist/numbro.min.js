/*!
 * numbro.js
 * version : 1.9.3
 * author : FÃ¶retagsplatsen AB
 * license : MIT
 * http://www.foretagsplatsen.se
 */
(function(){"use strict";/************************************
        Constructors
    ************************************/
// Numbro prototype object
//   number: number to initialize the numbro instance with
//   config: optional overrides for global configuration variables
function a(a,b){this._value=a,this._config=b||{}}function b(a){var b,c="";for(b=0;a>b;b++)c+="0";return c}/**
     * Implementation of toFixed() for numbers with exponents
     * This function may return negative representations for zero values e.g. "-0.0"
     */
function c(a,c){var d,e,f,g,h,i,j,k;
// exponent is positive - add zeros after the numbers
// exponent is negative
// tack on the decimal point if needed
// substring off the end to satisfy the precision
// only add percision 0's if the exponent is positive
return k=a.toString(),d=k.split("e")[0],g=k.split("e")[1],e=d.split(".")[0],f=d.split(".")[1]||"",+g>0?k=e+f+b(g-f.length):(h=0>+e?"-0":"0",c>0&&(h+="."),j=b(-1*g-1),i=(j+Math.abs(e)+f).substr(0,c),k=h+i),+g>0&&c>0&&(k+="."+b(c)),k}/**
     * Implementation of toFixed() that treats floats more like decimals
     *
     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present
     * problems for accounting- and finance-related software.
     *
     * Also removes negative signs for zero-formatted numbers. e.g. -0.01 w/ precision 1 -> 0.0
     */
function d(a,b,d,e){var f,g,h=Math.pow(10,b);
// toFixed returns scientific notation for numbers above 1e21 and below 1e-7
// remove the leading negative sign if it exists and should not be present (e.g. -0.00)
// Multiply up by precision, round accurately, then divide and use native toFixed():
return a.toString().indexOf("e")>-1?(g=c(a,b),"-"===g.charAt(0)&&+g>=0&&(g=g.substr(1))):g=(d(a+"e+"+b)/h).toFixed(b),e&&(f=new RegExp("0{1,"+e+"}$"),g=g.replace(f,"")),g}/************************************
        Formatting
    ************************************/
// determine what type of formatting we need to do
function e(a,b,c){var d,e=b.replace(/\{[^\{\}]*\}/g,"");
// return string
// figure out what kind of format we are dealing with
// currency!!!!!
return d=e.indexOf("$")>-1?g(a,z[B].currency.symbol,b,c):e.indexOf("%")>-1?i(a,b,c):e.indexOf(":")>-1?j(a,b):m(a,a._value,b,c)}
// revert to number
function f(a,b){var c,d,e,f,g,h,i=b,j=A[a._config.currentCulture||B],l=!1;if(b.indexOf(":")>-1)a._value=k(b);else if(c=a._config.zeroFormat||C,b===c)a._value=0;else{
// see if bytes are there so that we can multiply to the correct number
for("."!==j.delimiters.decimal&&(b=b.replace(/\./g,"").replace(j.delimiters.decimal,".")),d=new RegExp("[^a-zA-Z]"+j.abbreviations.thousand+"(?:\\)|(\\"+j.currency.symbol+")?(?:\\))?)?$"),e=new RegExp("[^a-zA-Z]"+j.abbreviations.million+"(?:\\)|(\\"+j.currency.symbol+")?(?:\\))?)?$"),f=new RegExp("[^a-zA-Z]"+j.abbreviations.billion+"(?:\\)|(\\"+j.currency.symbol+")?(?:\\))?)?$"),g=new RegExp("[^a-zA-Z]"+j.abbreviations.trillion+"(?:\\)|(\\"+j.currency.symbol+")?(?:\\))?)?$"),h=1;h<v.length&&!l;++h)b.indexOf(v[h])>-1?l=Math.pow(1024,h):b.indexOf(w[h])>-1&&(l=Math.pow(1e3,h));var m=b.replace(/[^0-9\.]+/g,"");""===m?
// An empty string is not a number.
a._value=NaN:(
// do some math to create our number
a._value=(l?l:1)*(i.match(d)?Math.pow(10,3):1)*(i.match(e)?Math.pow(10,6):1)*(i.match(f)?Math.pow(10,9):1)*(i.match(g)?Math.pow(10,12):1)*(b.indexOf("%")>-1?.01:1)*((b.split("-").length+Math.min(b.split("(").length-1,b.split(")").length-1))%2?1:-1)*Number(m),
// round if we are talking about bytes
a._value=l?Math.ceil(a._value):a._value)}return a._value}function g(a,b,c,d){var e,f,g=c,h=A[a._config.currentCulture||B],i=g.indexOf("$"),j=g.indexOf("("),k=g.indexOf("+"),l=g.indexOf("-"),n="",o="";if(-1===g.indexOf("$")?
// Use defaults instead of the format provided
"infix"===h.currency.position?(o=b,h.currency.spaceSeparated&&(o=" "+o+" ")):h.currency.spaceSeparated&&(n=" "):g.indexOf(" $")>-1?(n=" ",g=g.replace(" $","")):g.indexOf("$ ")>-1?(n=" ",g=g.replace("$ ","")):g=g.replace("$",""),f=m(a,a._value,g,d,o),-1===c.indexOf("$"))
// Use defaults instead of the format provided
switch(h.currency.position){case"postfix":f.indexOf(")")>-1?(f=f.split(""),f.splice(-1,0,n+b),f=f.join("")):f=f+n+b;break;case"infix":break;case"prefix":f.indexOf("(")>-1||f.indexOf("-")>-1?(f=f.split(""),e=Math.max(j,l)+1,f.splice(e,0,b+n),f=f.join("")):f=b+n+f;break;default:throw Error('Currency position should be among ["prefix", "infix", "postfix"]')}else
// position the symbol
1>=i?f.indexOf("(")>-1||f.indexOf("+")>-1||f.indexOf("-")>-1?(f=f.split(""),e=1,(j>i||k>i||l>i)&&(e=0),f.splice(e,0,b+n),f=f.join("")):f=b+n+f:f.indexOf(")")>-1?(f=f.split(""),f.splice(-1,0,n+b),f=f.join("")):f=f+n+b;return f}function h(a,b,c,d){return g(a,b,c,d)}function i(a,b,c){var d,e="",f=100*a._value;
// check for space before %
return b.indexOf(" %")>-1?(e=" ",b=b.replace(" %","")):b=b.replace("%",""),d=m(a,f,b,c),d.indexOf(")")>-1?(d=d.split(""),d.splice(-1,0,e+"%"),d=d.join("")):d=d+e+"%",d}function j(a){var b=Math.floor(a._value/60/60),c=Math.floor((a._value-60*b*60)/60),d=Math.round(a._value-60*b*60-60*c);return b+":"+(10>c?"0"+c:c)+":"+(10>d?"0"+d:d)}function k(a){var b=a.split(":"),c=0;
// turn hours and minutes into seconds and add them all up
// hours
// minutes
// seconds
// minutes
// seconds
return 3===b.length?(c+=60*Number(b[0])*60,c+=60*Number(b[1]),c+=Number(b[2])):2===b.length&&(c+=60*Number(b[0]),c+=Number(b[1])),Number(c)}function l(a,b,c){var d,e,f,g=b[0],h=Math.abs(a);if(h>=c){for(d=1;d<b.length;++d)if(e=Math.pow(c,d),f=Math.pow(c,d+1),h>=e&&f>h){g=b[d],a/=e;break}
// values greater than or equal to [scale] YB never set the suffix
g===b[0]&&(a/=Math.pow(c,b.length-1),g=b[b.length-1])}return{value:a,suffix:g}}function m(a,c,e,f,g){var h,i,j,k,m,n,o,p,q,r,s,t,u,v,w,x,z,D=!1,E=!1,F=!1,G="",H=!1,// force abbreviation to thousands
I=!1,// force abbreviation to millions
J=!1,// force abbreviation to billions
K=!1,// force abbreviation to trillions
L=!1,// force abbreviation
M="",N="",O=Math.abs(c),P=A[a._config.currentCulture||B],Q=a._config.zeroFormat||C,R="",S=!1,T=!1,U="";
// check if number is zero and a custom zero format has been set
if(0===c&&null!==Q)return Q;if(!isFinite(c))return""+c;if(0===e.indexOf("{")){var V=e.indexOf("}");if(-1===V)throw Error('Format should also contain a "}"');r=e.slice(1,V),e=e.slice(V+1)}else r="";if(e.indexOf("}")===e.length-1){var W=e.indexOf("{");if(-1===W)throw Error('Format should also contain a "{"');s=e.slice(W+1,-1),e=e.slice(0,W+1)}else s="";
// check for min length
var X;
// see if we are formatting
//   binary-decimal bytes (1024 MB), binary bytes (1024 MiB), or decimal bytes (1000 MB)
for(X=-1===e.indexOf(".")?e.match(/([0-9]+).*/):e.match(/([0-9]+)\..*/),x=null===X?-1:X[1].length,-1!==e.indexOf("-")&&(S=!0),e.indexOf("(")>-1?(D=!0,e=e.slice(1,-1)):e.indexOf("+")>-1&&(E=!0,e=e.replace(/\+/g,"")),e.indexOf("a")>-1&&(p=e.split(".")[0].match(/[0-9]+/g)||["0"],p=parseInt(p[0],10),H=e.indexOf("aK")>=0,I=e.indexOf("aM")>=0,J=e.indexOf("aB")>=0,K=e.indexOf("aT")>=0,L=H||I||J||K,e.indexOf(" a")>-1?(G=" ",e=e.replace(" a","")):e=e.replace("a",""),j=Math.floor(Math.log(O)/Math.LN10)+1,m=j%3,m=0===m?3:m,p&&0!==O&&(k=Math.floor(Math.log(O)/Math.LN10)+1-p,n=3*~~((Math.min(p,j)-m)/3),O/=Math.pow(10,n),-1===e.indexOf(".")&&p>3&&(e+="[.]",v=0===k?0:3*~~(k/3)-k,v=0>v?v+3:v,e+=b(v))),Math.floor(Math.log(Math.abs(c))/Math.LN10)+1!==p&&(O>=Math.pow(10,12)&&!L||K?(G+=P.abbreviations.trillion,c/=Math.pow(10,12)):O<Math.pow(10,12)&&O>=Math.pow(10,9)&&!L||J?(G+=P.abbreviations.billion,c/=Math.pow(10,9)):O<Math.pow(10,9)&&O>=Math.pow(10,6)&&!L||I?(G+=P.abbreviations.million,c/=Math.pow(10,6)):(O<Math.pow(10,6)&&O>=Math.pow(10,3)&&!L||H)&&(G+=P.abbreviations.thousand,c/=Math.pow(10,3)))),z=0;z<y.length;++z)if(h=y[z],e.indexOf(h.marker)>-1){
// check for space before
e.indexOf(" "+h.marker)>-1&&(M=" "),
// remove the marker (with the space if it had one)
e=e.replace(M+h.marker,""),i=l(c,h.suffixes,h.scale),c=i.value,M+=i.suffix;break}if(
// see if ordinal is wanted
e.indexOf("o")>-1&&(
// check for space before
e.indexOf(" o")>-1?(N=" ",e=e.replace(" o","")):e=e.replace("o",""),P.ordinal&&(N+=P.ordinal(c))),e.indexOf("[.]")>-1&&(F=!0,e=e.replace("[.]",".")),o=c.toString().split(".")[0],q=e.split(".")[1],t=e.indexOf(","),q){if(-1!==q.indexOf("*")?R=d(c,c.toString().split(".")[1].length,f):q.indexOf("[")>-1?(q=q.replace("]",""),q=q.split("["),R=d(c,q[0].length+q[1].length,f,q[1].length)):R=d(c,q.length,f),o=R.split(".")[0],R.split(".")[1].length){var Y=g?G+g:P.delimiters.decimal;R=Y+R.split(".")[1]}else R="";F&&0===Number(R.slice(1))&&(R="")}else o=d(c,0,f);
// format number
return o.indexOf("-")>-1&&(o=o.slice(1),T=!0),o.length<x&&(o=b(x-o.length)+o),t>-1&&(o=o.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g,"$1"+P.delimiters.thousands)),0===e.indexOf(".")&&(o=""),u=e.indexOf("("),w=e.indexOf("-"),U=w>u?(D&&T?"(":"")+(S&&T||!D&&T?"-":""):(S&&T||!D&&T?"-":"")+(D&&T?"(":""),r+U+(!T&&E&&0!==c?"+":"")+o+R+(N?N:"")+(G&&!g?G:"")+(M?M:"")+(D&&T?")":"")+s}/************************************
        Helpers
    ************************************/
function n(a,b){z[a]=b}function o(a){B=a;var b=z[a].defaults;b&&b.format&&t.defaultFormat(b.format),b&&b.currencyFormat&&t.defaultCurrencyFormat(b.currencyFormat)}function p(){return"undefined"!=typeof process&&void 0===process.browser&&process.title&&(0===process.title.indexOf("node")||process.title.indexOf("meteor-tool")>0||"grunt"===process.title||"gulp"===process.title)&&"undefined"!=typeof require}
// Checks if the preferred culture exists and return is, if it does;
// if that culture does not exist, it continues looking for a similar
// culture by the language prefix, then by the country suffix.  If
// nothing is found, it returns the fallback language, or English,
// if no fallback is provided.
function q(a,b){var c,d,e;return z[a]||(c=a.split("-")[0],Object.keys(z).some(function(a){return a.split("-")[0]===c?(e=a,!0):void 0}),e||(d=a.split("-")[1],d&&Object.keys(z).some(function(a){return a.split("-")[1]===d?(e=a,!0):void 0})),a=e||b||"en-US"),a}/**
     * Computes the multiplier necessary to make x >= 1,
     * effectively eliminating miscalculations caused by
     * finite precision.
     */
function r(a){var b=a.toString().split(".");return b.length<2?1:Math.pow(10,b[1].length)}/**
     * Given a variable number of arguments, returns the maximum
     * multiplier that must be used to normalize an operation involving
     * all of them.
     */
function s(){var a=Array.prototype.slice.call(arguments);return a.reduce(function(a,b){var c=r(a),d=r(b);return c>d?c:d},-(1/0))}/************************************
        Constants
    ************************************/
var t,u="1.9.3",v=["B","KiB","MiB","GiB","TiB","PiB","EiB","ZiB","YiB"],w=["B","KB","MB","GB","TB","PB","EB","ZB","YB"],x={general:{scale:1024,suffixes:w,marker:"bd"},binary:{scale:1024,suffixes:v,marker:"b"},decimal:{scale:1e3,suffixes:w,marker:"d"}},
// general must be before the others because it reuses their characters!
y=[x.general,x.binary,x.decimal],
// internal storage for culture config files
z={},
// Todo: Remove in 2.0.0
A=z,
// global configuration, overridable in Numbro instances
B="en-US",C=null,D="0,0",E="0$",
// check for nodeJS
F="undefined"!=typeof module&&module.exports,
// default culture
G={delimiters:{thousands:",",decimal:"."},abbreviations:{thousand:"k",million:"m",billion:"b",trillion:"t"},ordinal:function(a){var b=a%10;return 1===~~(a%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th"},currency:{symbol:"$",position:"prefix"},defaults:{currencyFormat:",0000 a"},formats:{fourDigits:"0000 a",fullWithTwoDecimals:"$ ,0.00",fullWithTwoDecimalsNoCurrency:",0.00"}};t=function(b){var c,d;
// Do not call unformat on the prototype; instance
// configuration may be accessed
return t.isNumbro(b)?new a(b.value(),b._config):0===b||"undefined"==typeof b?new a(0):(c=Number(b),isNaN(c)?(d=new a,d.set(d.unformat(b)),d):new a(c))},t.version=u,t.isNumbro=function(b){return b instanceof a},t.setLanguage=function(a,b){console.warn("`setLanguage` is deprecated since version 1.6.0. Use `setCulture` instead"),a=q(a,b),t.language(a)},t.setCulture=function(a,b){a=q(a,b),t.culture(a)},t.language=function(a,b){if(console.warn("`language` is deprecated since version 1.6.0. Use `culture` instead"),!a)return B;if(a&&!b){if(!A[a])throw new Error("Unknown language : "+a);o(a)}return(b||!A[a])&&n(a,b),t},t.culture=function(a,b){if(!a)return B;if(a&&!b){if(!z[a])throw new Error("Unknown culture : "+a);o(a)}return(b||!z[a])&&n(a,b),t},t.setLanguage=function(a,b){console.warn("`setLanguage` is deprecated since version 1.6.0. Use `setCulture` instead"),a=q(a,b),t.language(a)},t.setCulture=function(a,b){a=q(a,b),t.language(a)},t.languageData=function(a){if(console.warn("`languageData` is deprecated since version 1.6.0. Use `cultureData` instead"),!a)return A[B];if(!A[a])throw new Error("Unknown language : "+a);return A[a]},t.cultureData=function(a){if(!a)return z[B];if(!z[a])throw new Error("Unknown culture : "+a);return z[a]},t.culture("en-US",G),t.languages=function(){return console.warn("`languages` is deprecated since version 1.6.0. Use `cultures` instead"),A},t.cultures=function(){return z},t.zeroFormat=function(a){C="string"==typeof a?a:null},t.defaultFormat=function(a){D="string"==typeof a?a:"0.0"},t.defaultCurrencyFormat=function(a){E="string"==typeof a?a:"0$"},t.validate=function(a,b){var c,d,e,f,g,h,i,j;if("string"!=typeof a&&(a+="",console.warn&&console.warn("Numbro.js: Value is not string. It has been co-erced to: ",a)),a=a.trim(),a=a.replace(/^[+-]?/,""),a.match(/^\d+$/))return!0;if(""===a)return!1;try{i=t.cultureData(b)}catch(k){i=t.cultureData(t.culture())}return e=i.currency.symbol,g=i.abbreviations,c=i.delimiters.decimal,d="."===i.delimiters.thousands?"\\.":i.delimiters.thousands,j=a.match(/^[^\d\.\,]+/),null!==j&&(a=a.substr(1),j[0]!==e)?!1:(j=a.match(/[^\d]+$/),null!==j&&(a=a.slice(0,-1),j[0]!==g.thousand&&j[0]!==g.million&&j[0]!==g.billion&&j[0]!==g.trillion)?!1:(h=new RegExp(d+"{2}"),a.match(/[^\d.,]/g)?!1:(f=a.split(c),f.length>2?!1:f.length<2?!!f[0].match(/^\d+.*\d$/)&&!f[0].match(h):""===f[0]?!f[0].match(h)&&!!f[1].match(/^\d+$/):1===f[0].length?!!f[0].match(/^\d+$/)&&!f[0].match(h)&&!!f[1].match(/^\d+$/):!!f[0].match(/^\d+.*\d$/)&&!f[0].match(h)&&!!f[1].match(/^\d+$/))))},t.loadLanguagesInNode=function(){console.warn("`loadLanguagesInNode` is deprecated since version 1.6.0. Use `loadCulturesInNode` instead"),t.loadCulturesInNode()},t.loadCulturesInNode=function(){var a=require("./languages");for(var b in a)b&&t.culture(b,a[b])},"function"!=typeof Array.prototype.reduce&&(Array.prototype.reduce=function(a,b){if(null===this||"undefined"==typeof this)throw new TypeError("Array.prototype.reduce called on null or undefined");if("function"!=typeof a)throw new TypeError(a+" is not a function");var c,d,e=this.length>>>0,f=!1;for(1<arguments.length&&(d=b,f=!0),c=0;e>c;++c)this.hasOwnProperty(c)&&(f?d=a(d,this[c],c,this):(d=this[c],f=!0));if(!f)throw new TypeError("Reduce of empty array with no initial value");return d}),t.fn=a.prototype={clone:function(){return t(this)},format:function(a,b){var c=this._config.defaultFormat||D;return e(this,a?a:c,void 0!==b?b:Math.round)},formatCurrency:function(a,b){var c=this._config.defaultCurrencyFormat||E;return g(this,z[B].currency.symbol,a?a:c,void 0!==b?b:Math.round)},formatForeignCurrency:function(a,b,c){var d=this._config.defaultCurrencyFormat||E;return h(this,a,b?b:d,void 0!==c?c:Math.round)},unformat:function(a){if("number"==typeof a)return a;if("string"==typeof a){var b=f(this,a);return isNaN(b)?void 0:b}return void 0},binaryByteUnits:function(){return l(this._value,x.binary.suffixes,x.binary.scale).suffix},byteUnits:function(){return l(this._value,x.general.suffixes,x.general.scale).suffix},decimalByteUnits:function(){return l(this._value,x.decimal.suffixes,x.decimal.scale).suffix},value:function(){return this._value},valueOf:function(){return this._value},set:function(a){return this._value=Number(a),this},add:function(a){function b(a,b){return a+c*b}var c=s.call(null,this._value,a);return this._value=[this._value,a].reduce(b,0)/c,this},subtract:function(a){function b(a,b){return a-c*b}var c=s.call(null,this._value,a);return this._value=[a].reduce(b,this._value*c)/c,this},multiply:function(a){function b(a,b){var c=s(a,b),d=a*c;return d*=b*c,d/=c*c}return this._value=[this._value,a].reduce(b,1),this},divide:function(a){function b(a,b){var c=s(a,b);return a*c/(b*c)}return this._value=[this._value,a].reduce(b),this},difference:function(a){return Math.abs(t(this._value).subtract(a).value())},culture:function(a){if(!a)return this._config.currentCulture||B;var b=z[a];if(!b)throw new Error("Unknown culture : "+a);this._config.currentCulture=a;var c=b.defaults;return c&&(c.format&&this.defaultFormat(c.format),c.currencyFormat&&this.defaultCurrencyFormat(c.currencyFormat)),this},language:function(a){if(console.warn("`language` is deprecated since version 1.6.0. Use `culture` instead"),!a)return this._config.currentCulture||B;var b=A[a];if(!b)throw new Error("Unknown language : "+a);this._config.currentCulture=a;var c=b.defaults;return c&&(c.format&&this.defaultFormat(c.format),c.currencyFormat&&this.defaultCurrencyFormat(c.currencyFormat)),this},setCulture:function(a,b){return a=q(a,b),this.culture(a)},setLanguage:function(a,b){return console.warn("`setLanguage` is deprecated since version 1.6.0. Use `setCulture` instead"),a=q(a,b),this.language(a)},zeroFormat:function(a){return this._config.zeroFormat="string"==typeof a?a:null,this},defaultFormat:function(a){return this._config.defaultFormat="string"==typeof a?a:"0.0",this},defaultCurrencyFormat:function(a){return this._config.defaultCurrencyFormat="string"==typeof a?a:"0$",this}},p()&&t.loadCulturesInNode(),F?module.exports=t:("undefined"==typeof ender&&(this.numbro=t),"function"==typeof define&&define.amd&&define([],function(){return t}))}).call("undefined"==typeof window?this:window);