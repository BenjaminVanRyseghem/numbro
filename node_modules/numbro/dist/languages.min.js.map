{"version":3,"file":"languages.min.js","sources":["../languages/bg.js","../languages/cs-CZ.js","../languages/da-DK.js","../languages/de-AT.js","../languages/de-CH.js","../languages/de-DE.js","../languages/de-LI.js","../languages/el.js","../languages/en-AU.js","../languages/en-GB.js","../languages/en-IE.js","../languages/en-NZ.js","../languages/en-ZA.js","../languages/es-AR.js","../languages/es-CL.js","../languages/es-CO.js","../languages/es-CR.js","../languages/es-ES.js","../languages/es-MX.js","../languages/es-NI.js","../languages/es-PE.js","../languages/es-PR.js","../languages/es-SV.js","../languages/et-EE.js","../languages/fa-IR.js","../languages/fi-FI.js","../languages/fil-PH.js","../languages/fr-CA.js","../languages/fr-CH.js","../languages/fr-FR.js","../languages/he-IL.js","../languages/hu-HU.js","../languages/id.js","../languages/it-CH.js","../languages/it-IT.js","../languages/ja-JP.js","../languages/ko-KR.js","../languages/lv-LV.js","../languages/nb-NO.js","../languages/nb.js","../languages/nl-BE.js","../languages/nl-NL.js","../languages/nn.js","../languages/pl-PL.js","../languages/pt-BR.js","../languages/pt-PT.js","../languages/ro-RO.js","../languages/ru-RU.js","../languages/ru-UA.js","../languages/sk-SK.js","../languages/sl.js","../languages/sr-Cyrl-RS.js","../languages/sv-SE.js","../languages/th-TH.js","../languages/tr-TR.js","../languages/uk-UA.js","../languages/zh-CN.js","../languages/zh-MO.js","../languages/zh-SG.js","../languages/zh-TW.js","../languages.js"],"sourcesContent":["/*!\n * numbro.js language configuration\n * language : Bulgarian\n * author : Tim McIntosh (StayinFront NZ)\n */\n\nmodule.exports = {\n    languageTag: \"bg\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"И\",\n        million: \"А\",\n        billion: \"M\",\n        trillion: \"T\"\n    },\n    ordinal: () => \".\",\n    currency: {\n        symbol: \"лв.\",\n        code: \"BGN\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Czech\n * locale: Czech Republic\n * author : Jan Pesa : https://github.com/smajl (based on work from Anatoli Papirovski : https://github.com/apapirovski)\n */\n\nmodule.exports = {\n    languageTag: \"cs-CZ\",\n    delimiters: {\n        thousands: \"\\u00a0\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"tis.\",\n        million: \"mil.\",\n        billion: \"mld.\",\n        trillion: \"bil.\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    spaceSeparated: true,\n    currency: {\n        symbol: \"Kč\",\n        position: \"postfix\",\n        code: \"CZK\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        spaceSeparatedAbbreviation: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Danish\n * locale: Denmark\n * author : Michael Storgaard : https://github.com/mstorgaard\n */\n\nmodule.exports = {\n    languageTag: \"da-DK\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"t\",\n        million: \"mio\",\n        billion: \"mia\",\n        trillion: \"b\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"kr\",\n        position: \"postfix\",\n        code: \"DKK\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : German\n * locale: Austria\n * author : Tim McIntosh (StayinFront NZ)\n */\n\nmodule.exports = {\n    languageTag: \"de-AT\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"m\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"€\",\n        code: \"EUR\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : German\n * locale: Switzerland\n * author : Michael Piefel : https://github.com/piefel (based on work from Marco Krage : https://github.com/sinky)\n */\n\nmodule.exports = {\n    languageTag: \"de-CH\",\n    delimiters: {\n        thousands: \"’\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"m\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"CHF\",\n        position: \"postfix\",\n        code: \"CHF\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : German\n * locale: Germany\n * author : Marco Krage : https://github.com/sinky\n *\n * Generally useful in Germany, Austria, Luxembourg, Belgium\n */\n\nmodule.exports = {\n    languageTag: \"de-DE\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"Mi\",\n        billion: \"Ma\",\n        trillion: \"Bi\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    spaceSeparated: true,\n    currency: {\n        symbol: \"€\",\n        position: \"postfix\",\n        code: \"EUR\"\n    },\n    currencyFormat: {\n        totalLength: 4,\n        thousandSeparated: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : German\n * locale: Liechtenstein\n * author : Michael Piefel : https://github.com/piefel (based on work from Marco Krage : https://github.com/sinky)\n */\n\nmodule.exports = {\n    languageTag: \"de-LI\",\n    delimiters: {\n        thousands: \"'\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"m\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"CHF\",\n        position: \"postfix\",\n        code: \"CHF\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Greek (el)\n * author : Tim McIntosh (StayinFront NZ)\n */\n\nmodule.exports = {\n    languageTag: \"el\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"χ\",\n        million: \"ε\",\n        billion: \"δ\",\n        trillion: \"τ\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"€\",\n        code: \"EUR\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : English\n * locale: Australia\n * author : Benedikt Huss : https://github.com/ben305\n */\n\nmodule.exports = {\n    languageTag: \"en-AU\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"m\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: number => {\n        let b = number % 10;\n        return (~~(number % 100 / 10) === 1) ? \"th\" : (b === 1) ? \"st\" : (b === 2) ? \"nd\" : (b === 3) ? \"rd\" : \"th\";\n    },\n    currency: {\n        symbol: \"$\",\n        position: \"prefix\",\n        code: \"AUD\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            thousandSeparated: true,\n            mantissa: 2\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : English\n * locale: United Kingdom of Great Britain and Northern Ireland\n * author : Dan Ristic : https://github.com/dristic\n */\n\nmodule.exports = {\n    languageTag: \"en-GB\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"m\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: number => {\n        let b = number % 10;\n        return (~~(number % 100 / 10) === 1) ? \"th\" : (b === 1) ? \"st\" : (b === 2) ? \"nd\" : (b === 3) ? \"rd\" : \"th\";\n    },\n    currency: {\n        symbol: \"£\",\n        position: \"prefix\",\n        code: \"GBP\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: false,\n        spaceSeparatedCurrency: false,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: false,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            thousandSeparated: true,\n            spaceSeparated: false,\n            mantissa: 2\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            thousandSeparated: true,\n            spaceSeparated: false,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n+ * numbro.js language configuration\n * language : English\n * locale: Ireland\n * author : Tim McIntosh (StayinFront NZ)\n */\n\nmodule.exports = {\n    languageTag: \"en-IE\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"m\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: number => {\n        let b = number % 10;\n        return (~~(number % 100 / 10) === 1) ? \"th\" : (b === 1) ? \"st\" : (b === 2) ? \"nd\" : (b === 3) ? \"rd\" : \"th\";\n    },\n    currency: {\n        symbol: \"€\",\n        position: \"prefix\",\n        code: \"EUR\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : English\n * locale: New Zealand\n * author : Benedikt Huss : https://github.com/ben305\n */\n\nmodule.exports = {\n    languageTag: \"en-NZ\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"m\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: number => {\n        let b = number % 10;\n        return (~~(number % 100 / 10) === 1) ? \"th\" : (b === 1) ? \"st\" : (b === 2) ? \"nd\" : (b === 3) ? \"rd\" : \"th\";\n    },\n    currency: {\n        symbol: \"$\",\n        position: \"prefix\",\n        code: \"NZD\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            thousandSeparated: true,\n            mantissa: 2\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : English\n * locale: South Africa\n * author : Stewart Scott https://github.com/stewart42\n */\n\nmodule.exports = {\n    languageTag: \"en-ZA\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"m\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: number => {\n        let b = number % 10;\n        return (~~(number % 100 / 10) === 1) ? \"th\" : (b === 1) ? \"st\" : (b === 2) ? \"nd\" : (b === 3) ? \"rd\" : \"th\";\n    },\n    currency: {\n        symbol: \"R\",\n        position: \"prefix\",\n        code: \"ZAR\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            thousandSeparated: true,\n            mantissa: 2\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Spanish\n * locale: Argentina\n * author : Hernan Garcia : https://github.com/hgarcia\n */\n\nmodule.exports = {\n    languageTag: \"es-AR\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"mm\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: number => {\n        let b = number % 10;\n        return (b === 1 || b === 3) ? \"er\" : (b === 2) ? \"do\" : (b === 7 || b === 0) ? \"mo\" : (b === 8) ? \"vo\" : (b === 9) ? \"no\" : \"to\";\n    },\n    currency: {\n        symbol: \"$\",\n        position: \"postfix\",\n        code: \"ARS\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Spanish\n * locale: Chile\n * author : Gwyn Judd : https://github.com/gwynjudd\n */\n\nmodule.exports = {\n    languageTag: \"es-CL\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"mm\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: (number) => {\n        let b = number % 10;\n        return (b === 1 || b === 3) ? \"er\" : (b === 2) ? \"do\" : (b === 7 || b === 0) ? \"mo\" : (b === 8) ? \"vo\" : (b === 9) ? \"no\" : \"to\";\n    },\n    currency: {\n        symbol: \"$\",\n        position: \"prefix\",\n        code: \"CLP\"\n    },\n    currencyFormat: {\n        output: \"currency\",\n        thousandSeparated: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Spanish\n * locale: Colombia\n * author : Gwyn Judd : https://github.com/gwynjudd\n */\n\nmodule.exports = {\n    languageTag: \"es-CO\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"mm\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: (number) => {\n        let b = number % 10;\n        return (b === 1 || b === 3) ? \"er\" : (b === 2) ? \"do\" : (b === 7 || b === 0) ? \"mo\" : (b === 8) ? \"vo\" : (b === 9) ? \"no\" : \"to\";\n    },\n    currency: {\n        symbol: \"€\",\n        position: \"postfix\",\n        code: \"EUR\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Spanish\n * locale: Costa Rica\n * author : Gwyn Judd : https://github.com/gwynjudd\n */\n\nmodule.exports = {\n    languageTag: \"es-CR\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"mm\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: (number) => {\n        let b = number % 10;\n        return (b === 1 || b === 3) ? \"er\" : (b === 2) ? \"do\" : (b === 7 || b === 0) ? \"mo\" : (b === 8) ? \"vo\" : (b === 9) ? \"no\" : \"to\";\n    },\n    currency: {\n        symbol: \"₡\",\n        position: \"postfix\",\n        code: \"CRC\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Spanish\n * locale: Spain\n * author : Hernan Garcia : https://github.com/hgarcia\n */\n\nmodule.exports = {\n    languageTag: \"es-ES\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"mm\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: (number) => {\n        let b = number % 10;\n        return (b === 1 || b === 3) ? \"er\" : (b === 2) ? \"do\" : (b === 7 || b === 0) ? \"mo\" : (b === 8) ? \"vo\" : (b === 9) ? \"no\" : \"to\";\n    },\n    currency: {\n        symbol: \"€\",\n        position: \"postfix\",\n        code: \"EUR\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Spanish\n * locale: Mexico\n * author : Joe Bordes : https://github.com/joebordes\n */\n\nmodule.exports = {\n    languageTag: \"es-MX\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"mm\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: function(number) {\n        let b = number % 10;\n        return (b === 1 || b === 3) ? \"er\" : (b === 2) ? \"do\" : (b === 7 || b === 0) ? \"mo\" : (b === 8) ? \"vo\" : (b === 9) ? \"no\" : \"to\";\n    },\n    currency: {\n        symbol: \"$\",\n        position: \"postfix\",\n        code: \"MXN\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Spanish\n * locale: Nicaragua\n * author : Gwyn Judd : https://github.com/gwynjudd\n */\n\nmodule.exports = {\n    languageTag: \"es-NI\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"mm\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: (number) => {\n        let b = number % 10;\n        return (b === 1 || b === 3) ? \"er\" : (b === 2) ? \"do\" : (b === 7 || b === 0) ? \"mo\" : (b === 8) ? \"vo\" : (b === 9) ? \"no\" : \"to\";\n    },\n    currency: {\n        symbol: \"C$\",\n        position: \"prefix\",\n        code: \"NIO\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Spanish\n * locale: Peru\n * author : Gwyn Judd : https://github.com/gwynjudd\n */\n\nmodule.exports = {\n    languageTag: \"es-PE\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"mm\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: (number) => {\n        let b = number % 10;\n        return (b === 1 || b === 3) ? \"er\" : (b === 2) ? \"do\" : (b === 7 || b === 0) ? \"mo\" : (b === 8) ? \"vo\" : (b === 9) ? \"no\" : \"to\";\n    },\n    currency: {\n        symbol: \"S/.\",\n        position: \"prefix\",\n        code: \"PEN\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Spanish\n * locale: Puerto Rico\n * author : Gwyn Judd : https://github.com/gwynjudd\n */\n\nmodule.exports = {\n    languageTag: \"es-PR\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"mm\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: (number) => {\n        let b = number % 10;\n        return (b === 1 || b === 3) ? \"er\" : (b === 2) ? \"do\" : (b === 7 || b === 0) ? \"mo\" : (b === 8) ? \"vo\" : (b === 9) ? \"no\" : \"to\";\n    },\n    currency: {\n        symbol: \"$\",\n        position: \"prefix\",\n        code: \"USD\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Spanish\n * locale: El Salvador\n * author : Gwyn Judd : https://github.com/gwynjudd\n */\n\nmodule.exports = {\n    languageTag: \"es-SV\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"mm\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: (number) => {\n        let b = number % 10;\n        return (b === 1 || b === 3) ? \"er\" : (b === 2) ? \"do\" : (b === 7 || b === 0) ? \"mo\" : (b === 8) ? \"vo\" : (b === 9) ? \"no\" : \"to\";\n    },\n    currency: {\n        symbol: \"$\",\n        position: \"prefix\",\n        code: \"SVC\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Estonian\n * locale: Estonia\n * author : Illimar Tambek : https://github.com/ragulka\n *\n * Note: in Estonian, abbreviations are always separated\n * from numbers with a space\n */\n\nmodule.exports = {\n    languageTag: \"et-EE\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"tuh\",\n        million: \"mln\",\n        billion: \"mld\",\n        trillion: \"trl\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"€\",\n        position: \"postfix\",\n        code: \"EUR\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Farsi\n * locale: Iran\n * author : neo13 : https://github.com/neo13\n */\n\nmodule.exports = {\n    languageTag: \"fa-IR\",\n    delimiters: {\n        thousands: \"،\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"هزار\",\n        million: \"میلیون\",\n        billion: \"میلیارد\",\n        trillion: \"تریلیون\"\n    },\n    ordinal: function() {\n        return \"ام\";\n    },\n    currency: {\n        symbol: \"﷼\",\n        code: \"IRR\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Finnish\n * locale: Finland\n * author : Sami Saada : https://github.com/samitheberber\n */\n\nmodule.exports = {\n    languageTag: \"fi-FI\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"M\",\n        billion: \"G\",\n        trillion: \"T\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"€\",\n        position: \"postfix\",\n        code: \"EUR\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Filipino (Pilipino)\n * locale: Philippines\n * author : Michael Abadilla : https://github.com/mjmaix\n */\n\nmodule.exports = {\n    languageTag: \"fil-PH\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"m\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: (number) => {\n        let b = number % 10;\n        return (~~(number % 100 / 10) === 1) ? \"th\" : (b === 1) ? \"st\" : (b === 2) ? \"nd\" : (b === 3) ? \"rd\" : \"th\";\n    },\n    currency: {\n        symbol: \"₱\",\n        code: \"PHP\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : French\n * locale: Canada\n * author : Léo Renaud-Allaire : https://github.com/renaudleo\n */\n\nmodule.exports = {\n    languageTag: \"fr-CA\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"M\",\n        billion: \"G\",\n        trillion: \"T\"\n    },\n    ordinal: (number) => {\n        return number === 1 ? \"er\" : \"ème\";\n    },\n    spaceSeparated: true,\n    currency: {\n        symbol: \"$\",\n        position: \"postfix\",\n        code: \"USD\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            thousandSeparated: true,\n            mantissa: 2\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : French\n * locale: Switzerland\n * author : Adam Draper : https://github.com/adamwdraper\n */\n\nmodule.exports = {\n    languageTag: \"fr-CH\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"m\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: (number) => {\n        return number === 1 ? \"er\" : \"ème\";\n    },\n    currency: {\n        symbol: \"CHF\",\n        position: \"postfix\",\n        code: \"CHF\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : French\n * locale: France\n * author : Adam Draper : https://github.com/adamwdraper\n */\n\nmodule.exports = {\n    languageTag: \"fr-FR\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"M\",\n        billion: \"Mrd\",\n        trillion: \"billion\"\n    },\n    ordinal: (number) => {\n        return number === 1 ? \"er\" : \"ème\";\n    },\n    bytes: {\n        binarySuffixes: [\"o\", \"Kio\", \"Mio\", \"Gio\", \"Tio\", \"Pio\", \"Eio\", \"Zio\", \"Yio\"],\n        decimalSuffixes: [\"o\", \"Ko\", \"Mo\", \"Go\", \"To\", \"Po\", \"Eo\", \"Zo\", \"Yo\"]\n    },\n    currency: {\n        symbol: \"€\",\n        position: \"postfix\",\n        code: \"EUR\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Hebrew\n * locale : IL\n * author : Eli Zehavi : https://github.com/eli-zehavi\n */\n\nmodule.exports = {\n    languageTag: \"he-IL\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"אלף\",\n        million: \"מיליון\",\n        billion: \"מיליארד\",\n        trillion: \"טריליון\"\n    },\n    currency: {\n        symbol: \"₪\",\n        position: \"prefix\",\n        code: \"ILS\"\n    },\n    ordinal: () => \"\",\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Hungarian\n * locale: Hungary\n * author : Peter Bakondy : https://github.com/pbakondy\n */\n\nmodule.exports = {\n    languageTag: \"hu-HU\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"E\", // ezer\n        million: \"M\", // millió\n        billion: \"Mrd\", // milliárd\n        trillion: \"T\" // trillió\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"Ft\",\n        position: \"postfix\",\n        code: \"HUF\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Indonesian\n * author : Tim McIntosh (StayinFront NZ)\n */\n\nmodule.exports = {\n    languageTag: \"id\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"r\",\n        million: \"j\",\n        billion: \"m\",\n        trillion: \"t\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"Rp\",\n        code: \"IDR\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Italian\n * locale: Switzerland\n * author : Tim McIntosh (StayinFront NZ)\n */\n\nmodule.exports = {\n    languageTag: \"it-CH\",\n    delimiters: {\n        thousands: \"'\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"mila\",\n        million: \"mil\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: function() {\n        return \"°\";\n    },\n    currency: {\n        symbol: \"CHF\",\n        code: \"CHF\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Italian\n * locale: Italy\n * author : Giacomo Trombi : http://cinquepunti.it\n */\n\nmodule.exports = {\n    languageTag: \"it-IT\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"mila\",\n        million: \"mil\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: function() {\n        return \"º\";\n    },\n    currency: {\n        symbol: \"€\",\n        position: \"postfix\",\n        code: \"EUR\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Japanese\n * locale: Japan\n * author : teppeis : https://github.com/teppeis\n */\n\nmodule.exports = {\n    languageTag: \"ja-JP\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"千\",\n        million: \"百万\",\n        billion: \"十億\",\n        trillion: \"兆\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"¥\",\n        position: \"prefix\",\n        code: \"JPY\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            thousandSeparated: true,\n            mantissa: 2\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","﻿/*!\n * numbro.js language configuration\n * language : Korean\n * author (numbro.js Version): Randy Wilander : https://github.com/rocketedaway\n * author (numeral.js Version) : Rich Daley : https://github.com/pedantic-git\n */\n\nmodule.exports = {\n    languageTag: \"ko-KR\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"천\",\n        million: \"백만\",\n        billion: \"십억\",\n        trillion: \"일조\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"₩\",\n        code: \"KPW\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Latvian\n * locale: Latvia\n * author : Lauris Bukšis-Haberkorns : https://github.com/Lafriks\n */\n\nmodule.exports = {\n    languageTag: \"lv-LV\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"tūkst.\",\n        million: \"milj.\",\n        billion: \"mljrd.\",\n        trillion: \"trilj.\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"€\",\n        position: \"postfix\",\n        code: \"EUR\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language: Norwegian Bokmål\n * locale: Norway\n * author : Benjamin Van Ryseghem\n */\n\nmodule.exports = {\n    languageTag: \"nb-NO\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"t\",\n        million: \"M\",\n        billion: \"md\",\n        trillion: \"b\"\n    },\n    ordinal: () => \"\",\n    currency: {\n        symbol: \"kr\",\n        position: \"postfix\",\n        code: \"NOK\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Norwegian Bokmål (nb)\n * author : Tim McIntosh (StayinFront NZ)\n */\n\nmodule.exports = {\n    languageTag: \"nb\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"t\",\n        million: \"mil\",\n        billion: \"mia\",\n        trillion: \"b\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"kr\",\n        code: \"NOK\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Dutch\n * locale: Belgium\n * author : Dieter Luypaert : https://github.com/moeriki\n */\n\nmodule.exports = {\n    languageTag: \"nl-BE\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"mln\",\n        billion: \"mld\",\n        trillion: \"bln\"\n    },\n    ordinal: number => {\n        let remainder = number % 100;\n        return (number !== 0 && remainder <= 1 || remainder === 8 || remainder >= 20) ? \"ste\" : \"de\";\n    },\n    currency: {\n        symbol: \"€\",\n        position: \"postfix\",\n        code: \"EUR\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Dutch\n * locale: Netherlands\n * author : Dave Clayton : https://github.com/davedx\n */\n\nmodule.exports = {\n    languageTag: \"nl-NL\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"mln\",\n        billion: \"mrd\",\n        trillion: \"bln\"\n    },\n    ordinal: (number) => {\n        let remainder = number % 100;\n        return (number !== 0 && remainder <= 1 || remainder === 8 || remainder >= 20) ? \"ste\" : \"de\";\n    },\n    currency: {\n        symbol: \"€\",\n        position: \"prefix\",\n        code: \"EUR\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Norwegian Nynorsk (nn)\n * author : Tim McIntosh (StayinFront NZ)\n */\n\nmodule.exports = {\n    languageTag: \"nn\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"t\",\n        million: \"mil\",\n        billion: \"mia\",\n        trillion: \"b\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"kr\",\n        code: \"NOK\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Polish\n * locale : Poland\n * author : Dominik Bulaj : https://github.com/dominikbulaj\n */\n\nmodule.exports = {\n    languageTag: \"pl-PL\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"tys.\",\n        million: \"mln\",\n        billion: \"mld\",\n        trillion: \"bln\"\n    },\n    ordinal: () => \".\",\n    currency: {\n        symbol: \" zł\",\n        position: \"postfix\",\n        code: \"PLN\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Portuguese\n * locale : Brazil\n * author : Ramiro letandas Jr : https://github.com/ramirovjr\n */\n\nmodule.exports = {\n    languageTag: \"pt-BR\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"mil\",\n        million: \"milhões\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: function() {\n        return \"º\";\n    },\n    currency: {\n        symbol: \"R$\",\n        position: \"prefix\",\n        code: \"BRL\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Portuguese\n * locale : Portugal\n * author : Diogo Resende : https://github.com/dresende\n */\n\nmodule.exports = {\n    languageTag: \"pt-PT\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"m\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: function() {\n        return \"º\";\n    },\n    currency: {\n        symbol: \"€\",\n        position: \"postfix\",\n        code: \"EUR\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numeral.js language configuration\n * language : Romanian\n * author : Andrei Alecu https://github.com/andreialecu\n */\n\nmodule.exports = {\n    languageTag: \"ro-RO\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"mii\",\n        million: \"mil\",\n        billion: \"mld\",\n        trillion: \"bln\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \" lei\",\n        position: \"postfix\",\n        code: \"RON\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Russian\n * locale : Russsia\n * author : Anatoli Papirovski : https://github.com/apapirovski\n */\n\nmodule.exports = {\n    languageTag: \"ru-RU\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"тыс.\",\n        million: \"млн\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: function() {\n        // not ideal, but since in Russian it can taken on\n        // different forms (masculine, feminine, neuter)\n        // this is all we can do\n        return \".\";\n    },\n    currency: {\n        symbol: \"руб.\",\n        position: \"postfix\",\n        code: \"RUB\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Russian\n * locale : Ukraine\n * author : Anatoli Papirovski : https://github.com/apapirovski\n */\n\nmodule.exports = {\n    languageTag: \"ru-UA\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"тыс.\",\n        million: \"млн\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: function() {\n        // not ideal, but since in Russian it can taken on\n        // different forms (masculine, feminine, neuter)\n        // this is all we can do\n        return \".\";\n    },\n    currency: {\n        symbol: \"\\u20B4\",\n        position: \"postfix\",\n        code: \"UAH\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Slovak\n * locale : Slovakia\n * author : Jan Pesa : https://github.com/smajl (based on work from Ahmed Al Hafoudh : http://www.freevision.sk)\n */\n\nmodule.exports = {\n    languageTag: \"sk-SK\",\n    delimiters: {\n        thousands: \"\\u00a0\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"tis.\",\n        million: \"mil.\",\n        billion: \"mld.\",\n        trillion: \"bil.\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    spaceSeparated: true,\n    currency: {\n        symbol: \"€\",\n        position: \"postfix\",\n        code: \"EUR\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Slovene\n * locale: Slovenia\n * author : Tim McIntosh (StayinFront NZ)\n */\n\nmodule.exports = {\n    languageTag: \"sl\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"tis.\",\n        million: \"mil.\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"€\",\n        code: \"EUR\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Serbian (sr)\n * country : Serbia (Cyrillic)\n * author : Tim McIntosh (StayinFront NZ)\n */\n\nmodule.exports = {\n    languageTag: \"sr-Cyrl-RS\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"тыс.\",\n        million: \"млн\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    ordinal: () => \".\",\n    currency: {\n        symbol: \"RSD\",\n        code: \"RSD\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Swedish\n * locale : Sweden\n * author : Benjamin Van Ryseghem (benjamin.vanryseghem.com)\n */\n\nmodule.exports = {\n    languageTag: \"sv-SE\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"t\",\n        million: \"M\",\n        billion: \"md\",\n        trillion: \"tmd\"\n    },\n    ordinal: () => \"\",\n    currency: {\n        symbol: \"kr\",\n        position: \"postfix\",\n        code: \"SEK\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Thai\n * locale : Thailand\n * author : Sathit Jittanupat : https://github.com/jojosati\n */\n\nmodule.exports = {\n    languageTag: \"th-TH\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"พัน\",\n        million: \"ล้าน\",\n        billion: \"พันล้าน\",\n        trillion: \"ล้านล้าน\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"฿\",\n        position: \"postfix\",\n        code: \"THB\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Turkish\n * locale : Turkey\n * author : Ecmel Ercan : https://github.com/ecmel,\n *          Erhan Gundogan : https://github.com/erhangundogan,\n *          Burak Yiğit Kaya: https://github.com/BYK\n */\n\nconst suffixes = {\n    1: \"'inci\",\n    5: \"'inci\",\n    8: \"'inci\",\n    70: \"'inci\",\n    80: \"'inci\",\n\n    2: \"'nci\",\n    7: \"'nci\",\n    20: \"'nci\",\n    50: \"'nci\",\n\n    3: \"'üncü\",\n    4: \"'üncü\",\n    100: \"'üncü\",\n\n    6: \"'ncı\",\n\n    9: \"'uncu\",\n    10: \"'uncu\",\n    30: \"'uncu\",\n\n    40: \"'ıncı\",\n    60: \"'ıncı\",\n    90: \"'ıncı\"\n};\n\nmodule.exports = {\n    languageTag: \"tr-TR\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"bin\",\n        million: \"milyon\",\n        billion: \"milyar\",\n        trillion: \"trilyon\"\n    },\n    ordinal: number => {\n        // special case for zero\n        if (number === 0) {\n            return \"'ıncı\";\n        }\n\n        let a = number % 10;\n        let b = number % 100 - a;\n        let c = number >= 100 ? 100 : null;\n\n        return suffixes[a] || suffixes[b] || suffixes[c];\n    },\n    currency: {\n        symbol: \"\\u20BA\",\n        position: \"postfix\",\n        code: \"TRY\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Ukrainian\n * locale : Ukraine\n * author : Michael Piefel : https://github.com/piefel (with help from Tetyana Kuzmenko)\n */\n\nmodule.exports = {\n    languageTag: \"uk-UA\",\n    delimiters: {\n        thousands: \" \",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"тис.\",\n        million: \"млн\",\n        billion: \"млрд\",\n        trillion: \"блн\"\n    },\n    ordinal: () => {\n        // not ideal, but since in Ukrainian it can taken on\n        // different forms (masculine, feminine, neuter)\n        // this is all we can do\n        return \"\";\n    },\n    currency: {\n        symbol: \"\\u20B4\",\n        position: \"postfix\",\n        code: \"UAH\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : simplified chinese\n * locale : China\n * author : badplum : https://github.com/badplum\n */\n\nmodule.exports = {\n    languageTag: \"zh-CN\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"千\",\n        million: \"百万\",\n        billion: \"十亿\",\n        trillion: \"兆\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"¥\",\n        position: \"prefix\",\n        code: \"CNY\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            thousandSeparated: true,\n            mantissa: 2\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n\n","/*!\n * numbro.js language configuration\n * language : Chinese traditional\n * locale: Macau\n * author : Tim McIntosh (StayinFront NZ)\n */\n\nmodule.exports = {\n    languageTag: \"zh-MO\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"千\",\n        million: \"百萬\",\n        billion: \"十億\",\n        trillion: \"兆\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"MOP\",\n        code: \"MOP\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Chinese simplified\n * locale: Singapore\n * author : Tim McIntosh (StayinFront NZ)\n */\n\nmodule.exports = {\n    languageTag: \"zh-SG\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"千\",\n        million: \"百万\",\n        billion: \"十亿\",\n        trillion: \"兆\"\n    },\n    ordinal: function() {\n        return \".\";\n    },\n    currency: {\n        symbol: \"$\",\n        code: \"SGD\"\n    }\n};\n","/*!\n * numbro.js language configuration\n * language : Chinese (Taiwan)\n * author (numbro.js Version): Randy Wilander : https://github.com/rocketedaway\n * author (numeral.js Version) : Rich Daley : https://github.com/pedantic-git\n */\n\nmodule.exports = {\n    languageTag: \"zh-TW\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"千\",\n        million: \"百萬\",\n        billion: \"十億\",\n        trillion: \"兆\"\n    },\n    ordinal: function() {\n        return \"第\";\n    },\n    currency: {\n        symbol: \"NT$\",\n        code: \"TWD\"\n    }\n};\n","exports[\"bg\"]=require(\"./dist/languages/bg.min.js\");exports[\"cs-CZ\"]=require(\"./dist/languages/cs-CZ.min.js\");exports[\"da-DK\"]=require(\"./dist/languages/da-DK.min.js\");exports[\"de-AT\"]=require(\"./dist/languages/de-AT.min.js\");exports[\"de-CH\"]=require(\"./dist/languages/de-CH.min.js\");exports[\"de-DE\"]=require(\"./dist/languages/de-DE.min.js\");exports[\"de-LI\"]=require(\"./dist/languages/de-LI.min.js\");exports[\"el\"]=require(\"./dist/languages/el.min.js\");exports[\"en-AU\"]=require(\"./dist/languages/en-AU.min.js\");exports[\"en-GB\"]=require(\"./dist/languages/en-GB.min.js\");exports[\"en-IE\"]=require(\"./dist/languages/en-IE.min.js\");exports[\"en-NZ\"]=require(\"./dist/languages/en-NZ.min.js\");exports[\"en-ZA\"]=require(\"./dist/languages/en-ZA.min.js\");exports[\"es-AR\"]=require(\"./dist/languages/es-AR.min.js\");exports[\"es-CL\"]=require(\"./dist/languages/es-CL.min.js\");exports[\"es-CO\"]=require(\"./dist/languages/es-CO.min.js\");exports[\"es-CR\"]=require(\"./dist/languages/es-CR.min.js\");exports[\"es-ES\"]=require(\"./dist/languages/es-ES.min.js\");exports[\"es-MX\"]=require(\"./dist/languages/es-MX.min.js\");exports[\"es-NI\"]=require(\"./dist/languages/es-NI.min.js\");exports[\"es-PE\"]=require(\"./dist/languages/es-PE.min.js\");exports[\"es-PR\"]=require(\"./dist/languages/es-PR.min.js\");exports[\"es-SV\"]=require(\"./dist/languages/es-SV.min.js\");exports[\"et-EE\"]=require(\"./dist/languages/et-EE.min.js\");exports[\"fa-IR\"]=require(\"./dist/languages/fa-IR.min.js\");exports[\"fi-FI\"]=require(\"./dist/languages/fi-FI.min.js\");exports[\"fil-PH\"]=require(\"./dist/languages/fil-PH.min.js\");exports[\"fr-CA\"]=require(\"./dist/languages/fr-CA.min.js\");exports[\"fr-CH\"]=require(\"./dist/languages/fr-CH.min.js\");exports[\"fr-FR\"]=require(\"./dist/languages/fr-FR.min.js\");exports[\"he-IL\"]=require(\"./dist/languages/he-IL.min.js\");exports[\"hu-HU\"]=require(\"./dist/languages/hu-HU.min.js\");exports[\"id\"]=require(\"./dist/languages/id.min.js\");exports[\"it-CH\"]=require(\"./dist/languages/it-CH.min.js\");exports[\"it-IT\"]=require(\"./dist/languages/it-IT.min.js\");exports[\"ja-JP\"]=require(\"./dist/languages/ja-JP.min.js\");exports[\"ko-KR\"]=require(\"./dist/languages/ko-KR.min.js\");exports[\"lv-LV\"]=require(\"./dist/languages/lv-LV.min.js\");exports[\"nb-NO\"]=require(\"./dist/languages/nb-NO.min.js\");exports[\"nb\"]=require(\"./dist/languages/nb.min.js\");exports[\"nl-BE\"]=require(\"./dist/languages/nl-BE.min.js\");exports[\"nl-NL\"]=require(\"./dist/languages/nl-NL.min.js\");exports[\"nn\"]=require(\"./dist/languages/nn.min.js\");exports[\"pl-PL\"]=require(\"./dist/languages/pl-PL.min.js\");exports[\"pt-BR\"]=require(\"./dist/languages/pt-BR.min.js\");exports[\"pt-PT\"]=require(\"./dist/languages/pt-PT.min.js\");exports[\"ro-RO\"]=require(\"./dist/languages/ro-RO.min.js\");exports[\"ro\"]=require(\"./dist/languages/ro.min.js\");exports[\"ru-RU\"]=require(\"./dist/languages/ru-RU.min.js\");exports[\"ru-UA\"]=require(\"./dist/languages/ru-UA.min.js\");exports[\"sk-SK\"]=require(\"./dist/languages/sk-SK.min.js\");exports[\"sl\"]=require(\"./dist/languages/sl.min.js\");exports[\"sr-Cyrl-RS\"]=require(\"./dist/languages/sr-Cyrl-RS.min.js\");exports[\"sv-SE\"]=require(\"./dist/languages/sv-SE.min.js\");exports[\"th-TH\"]=require(\"./dist/languages/th-TH.min.js\");exports[\"tr-TR\"]=require(\"./dist/languages/tr-TR.min.js\");exports[\"uk-UA\"]=require(\"./dist/languages/uk-UA.min.js\");exports[\"zh-CN\"]=require(\"./dist/languages/zh-CN.min.js\");exports[\"zh-MO\"]=require(\"./dist/languages/zh-MO.min.js\");exports[\"zh-SG\"]=require(\"./dist/languages/zh-SG.min.js\");exports[\"zh-TW\"]=require(\"./dist/languages/zh-TW.min.js\");"],"names":["languageTag","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","currency","symbol","code","e","spaceSeparated","position","currencyFormat","thousandSeparated","totalLength","spaceSeparatedCurrency","spaceSeparatedAbbreviation","average","formats","fourDigits","fullWithTwoDecimals","output","mantissa","fullWithTwoDecimalsNoCurrency","fullWithNoDecimals","number","b","bytes","binarySuffixes","decimalSuffixes","remainder","suffixes","a","exports","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","require$$38","require$$39","require$$40","require$$41","require$$42","require$$43","require$$44","require$$45","require$$46","require$$47","require$$48","require$$49","require$$50","require$$51","require$$52","require$$53","require$$54","require$$55","require$$56","require$$57","require$$58","require$$59","require$$60"],"mappings":";;;;;eAMiB,CACbA,YAAa,KACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,IAAM,IACfC,SAAU,CACNC,OAAQ,MACRC,KAAM,QAAA;;;;;;MCdG,OAAAC,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,OACVC,QAAS,OACTC,QAAS,OACTC,SAAU,QAEdC,QAAS,WACL,MAAO,GACV,EACDK,gBAAAA,EACAJ,SAAU,CACNC,OAAQ,KACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAC,4BAA4B,EAC5BC,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,kBACAG,mBAAAA,GAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRX,kBACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;MCjDL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,MACTC,QAAS,MACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,KACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAAA,EACAO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAAA,EACAG,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRX,kBACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;eC/CL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,IACRC,KAAM,QAAA;;;;;;MCjBG,OAAAC,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,MACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,gBAAgB,EAChBO,YAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,sBAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAAA,EACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;;;MC5CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,KACTC,SAAU,MAEdC,QAAS,WACL,MAAO,GACV,EACDK,kBACAJ,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZE,YAAa,EACbD,mBAAAA,GAEJK,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,sBAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAAA,EACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;MC/CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,MACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAAA,EACAO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAAA,EACAG,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRX,kBACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;eChDL,CACb1B,YAAa,KACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,IACRC,KAAM,QAAA;;;;;;MChBG,OAAAC,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAASoB,IACL,IAAIC,EAAID,EAAS,GACjB,OAAkC,MAAvBA,EAAS,IAAM,IAAa,KAAc,IAANC,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAE3GpB,SAAU,CACNC,OAAQ,IACRI,SAAU,SACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,kBACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,kBACAO,SAAAA,GAEJG,oBAAqB,CACjBP,qBACAS,SAAU,GAEdC,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRR,mBAAAA,EACAS,SAAU,KAAA;;;;;;eC7CL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAASoB,IACL,IAAIC,EAAID,EAAS,GACjB,OAAkC,MAAvBA,EAAS,IAAM,IAAa,KAAc,IAANC,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAE3GpB,SAAU,CACNC,OAAQ,IACRI,SAAU,SACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAK,wBAAwB,EACxBE,YAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAAA,EACAO,SAAAA,GAEJG,oBAAqB,CACjBC,OAAQ,WACRR,qBACAH,gBAAAA,EACAY,SAAU,GAEdC,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRR,mBAAmB,EACnBH,gBAAgB,EAChBY,SAAU,KAAA;;;;;;eChDL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAASoB,IACL,IAAIC,EAAID,EAAS,GACjB,OAAkC,MAAvBA,EAAS,IAAM,IAAa,KAAc,IAANC,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAE3GpB,SAAU,CACNC,OAAQ,IACRI,SAAU,SACVH,KAAM,QAAA;;;;;;MCnBG,OAAAC,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAASoB,IACL,IAAIC,EAAID,EAAS,GACjB,OAAkC,MAAvBA,EAAS,IAAM,IAAa,KAAc,IAANC,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAE3GpB,SAAU,CACNC,OAAQ,IACRI,SAAU,SACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,kBACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,kBACAO,SAAAA,GAEJG,oBAAqB,CACjBP,qBACAS,SAAU,GAEdC,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRR,mBAAAA,EACAS,SAAU,KAAA;;;;;;MC7CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAASoB,IACL,IAAIC,EAAID,EAAS,GACjB,OAAkC,MAAvBA,EAAS,IAAM,IAAa,KAAc,IAANC,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAE3GpB,SAAU,CACNC,OAAQ,IACRI,SAAU,SACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,kBACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,kBACAO,SAAAA,GAEJG,oBAAqB,CACjBP,qBACAS,SAAU,GAEdC,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRR,mBAAAA,EACAS,SAAU,KAAA;;;;;;eC7CL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,IACTC,SAAU,KAEdC,QAASoB,IACL,IAAIC,EAAID,EAAS,GACjB,OAAc,IAANC,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAEhIpB,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,qBACAC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,kBACAG,mBAAAA,GAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAgB,EAChBG,mBAAmB,EACnBS,SAAU,KAAA;;;;;;eChDL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,IACTC,SAAU,KAEdC,QAAUoB,IACN,IAAIC,EAAID,EAAS,GACjB,OAAc,IAANC,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAEhIpB,SAAU,CACNC,OAAQ,IACRI,SAAU,SACVH,KAAM,OAEVI,eAAgB,CACZS,OAAQ,WACRR,mBAAAA,GAEJK,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAAA,EACAG,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAgB,EAChBG,mBAAmB,EACnBS,SAAU,KAAA;;;;;;eC7CL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,IACTC,SAAU,KAEdC,QAAUoB,IACN,IAAIC,EAAID,EAAS,GACjB,OAAc,IAANC,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAEhIpB,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAO,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,kBACAG,mBAAAA,GAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAgB,EAChBG,mBAAmB,EACnBS,SAAU,KAAA;;;;;;eC/CL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,IACTC,SAAU,KAEdC,QAAUoB,IACN,IAAIC,EAAID,EAAS,GACjB,OAAc,IAANC,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAEhIpB,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,qBACAC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,kBACAG,mBAAAA,GAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAgB,EAChBG,mBAAmB,EACnBS,SAAU,KAAA;;;;;;eChDL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,IACTC,SAAU,KAEdC,QAAUoB,IACN,IAAIC,EAAID,EAAS,GACjB,OAAc,IAANC,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAEhIpB,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,qBACAC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,kBACAG,mBAAAA,GAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAgB,EAChBG,mBAAmB,EACnBS,SAAU,KAAA;;;;;;eChDL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,SAASoB,GACd,IAAIC,EAAID,EAAS,GACjB,OAAc,IAANC,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,IAC/H,EACDpB,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,gBAAAA,EACAO,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,kBACAG,mBAAAA,GAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAgB,EAChBG,mBAAmB,EACnBS,SAAU,KAAA;;;;;;eC/CL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,IACTC,SAAU,KAEdC,QAAUoB,IACN,IAAIC,EAAID,EAAS,GACjB,OAAc,IAANC,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAEhIpB,SAAU,CACNC,OAAQ,KACRI,SAAU,SACVH,KAAM,OAEVI,eAAgB,CACZC,qBACAC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,kBACAG,mBAAAA,GAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAgB,EAChBG,mBAAmB,EACnBS,SAAU,KAAA;;;;;;eChDL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,IACTC,SAAU,KAEdC,QAAUoB,IACN,IAAIC,EAAID,EAAS,GACjB,OAAc,IAANC,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAEhIpB,SAAU,CACNC,OAAQ,MACRI,SAAU,SACVH,KAAM,OAEVI,eAAgB,CACZC,qBACAC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,kBACAG,mBAAAA,GAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAgB,EAChBG,mBAAmB,EACnBS,SAAU,KAAA;;;;;;eChDL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,IACTC,SAAU,KAEdC,QAAUoB,IACN,IAAIC,EAAID,EAAS,GACjB,OAAc,IAANC,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAEhIpB,SAAU,CACNC,OAAQ,IACRI,SAAU,SACVH,KAAM,OAEVI,eAAgB,CACZC,qBACAC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,kBACAG,mBAAAA,GAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAgB,EAChBG,mBAAmB,EACnBS,SAAU,KAAA;;;;;;eChDL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,IACTC,SAAU,KAEdC,QAAUoB,IACN,IAAIC,EAAID,EAAS,GACjB,OAAc,IAANC,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,GAAiB,IAANA,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAEhIpB,SAAU,CACNC,OAAQ,IACRI,SAAU,SACVH,KAAM,OAEVI,eAAgB,CACZC,qBACAC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,kBACAG,mBAAAA,GAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAgB,EAChBG,mBAAmB,EACnBS,SAAU,KAAA;;;;;;;;;MC7CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,MACVC,QAAS,MACTC,QAAS,MACTC,SAAU,OAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAAA,EACAO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAAA,EACAG,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRX,kBACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;eClDL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,OACVC,QAAS,SACTC,QAAS,UACTC,SAAU,WAEdC,QAAS,WACL,MAAO,IACV,EACDC,SAAU,CACNC,OAAQ,IACRC,KAAM,QAAA;;;;;;MCjBG,OAAAC,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAAA,EACAO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAAA,EACAG,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRX,kBACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;eC/CL,CACb1B,YAAa,SACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAAUoB,IACN,IAAIC,EAAID,EAAS,GACjB,OAAkC,MAAvBA,EAAS,IAAM,IAAa,KAAc,IAANC,EAAW,KAAc,IAANA,EAAW,KAAc,IAANA,EAAW,KAAO,MAE3GpB,SAAU,CACNC,OAAQ,IACRC,KAAM,QAAA;;;;;;MClBG,OAAAC,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAAUoB,GACY,IAAXA,EAAe,KAAO,MAEjCf,gBAAgB,EAChBJ,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAgB,EAChBO,YAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBP,mBAAAA,EACAS,SAAU,GAEdC,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRR,mBAAAA,EACAS,SAAU,KAAA;;;;;;MC5CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAAUoB,GACY,IAAXA,EAAe,KAAO,MAEjCnB,SAAU,CACNC,OAAQ,MACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAAA,EACAO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAAA,EACAG,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRX,kBACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;eC/CL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,MACTC,SAAU,WAEdC,QAAUoB,GACY,IAAXA,EAAe,KAAO,MAEjCE,MAAO,CACHC,eAAgB,CAAC,IAAK,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACvEC,gBAAiB,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAErEvB,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAgB,EAChBK,0BACAE,SAAAA,GAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAAA,EACAO,SAAAA,GAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAgB,EAChBG,mBAAmB,EACnBS,SAAU,KAAA;;;;;;MCnDL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,MACVC,QAAS,SACTC,QAAS,UACTC,SAAU,WAEdE,SAAU,CACNC,OAAQ,IACRI,SAAU,SACVH,KAAM,OAEVH,QAAS,IAAM,GACfO,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,gBAAgB,EAChBK,wBAAwB,EACxBE,YAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,sBAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAAA,EACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;MC7CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,MACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,KACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAAA,EACAO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAAA,EACAG,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRX,kBACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;eChDL,CACb1B,YAAa,KACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,KACRC,KAAM,QAAA;;;;;;eChBG,CACbZ,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,OACVC,QAAS,MACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,MACRC,KAAM,QAAA;;;;;;MCjBG,OAAAC,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,OACVC,QAAS,MACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAAA,EACAO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAAA,EACAG,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRX,kBACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;MC/CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,KACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,IACRI,SAAU,SACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAgB,EAChBK,wBAAwB,EACxBE,YAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBP,mBAAAA,EACAS,SAAU,GAEdC,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRR,mBAAAA,EACAS,SAAU,KAAA;;;;;;eC5CL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,KACTC,SAAU,MAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,IACRC,KAAM,QAAA;;;;;;MCjBG,OAAAC,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,SACVC,QAAS,QACTC,QAAS,SACTC,SAAU,UAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAAA,EACAO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAAA,EACAG,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRX,kBACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;MC/CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,KACTC,SAAU,KAEdC,QAAS,IAAM,GACfC,SAAU,CACNC,OAAQ,KACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,gBAAgB,EAChBK,wBAAwB,EACxBE,YAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,sBAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAAA,EACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;eC9CL,CACb1B,YAAa,KACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,MACTC,QAAS,MACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,KACRC,KAAM,QAAA;;;;;;MChBG,OAAAC,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,MACTC,QAAS,MACTC,SAAU,OAEdC,QAASoB,IACL,IAAIK,EAAYL,EAAS,IACzB,OAAmB,IAAXA,GAAgBK,GAAa,GAAmB,IAAdA,GAAmBA,GAAa,GAAM,MAAQ,MAE5FxB,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,qBACAC,YAAa,EACbJ,gBAAgB,EAChBO,YAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAAA,EACAO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,sBAEJU,8BAA+B,CAC3BD,SAAU,EACVT,sBAEJW,mBAAoB,CAChBH,OAAQ,WACRX,kBACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;MC/CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,MACTC,QAAS,MACTC,SAAU,OAEdC,QAAUoB,IACN,IAAIK,EAAYL,EAAS,IACzB,OAAmB,IAAXA,GAAgBK,GAAa,GAAmB,IAAdA,GAAmBA,GAAa,GAAM,MAAQ,MAE5FxB,SAAU,CACNC,OAAQ,IACRI,SAAU,SACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,kBACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,kBACAO,SAAAA,GAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,sBAEJU,8BAA+B,CAC3BD,SAAU,EACVT,sBAEJW,mBAAoB,CAChBH,OAAQ,WACRX,kBACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;eCjDL,CACb1B,YAAa,KACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,MACTC,QAAS,MACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,KACRC,KAAM,QAAA;;;;;;MChBG,OAAAC,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,OACVC,QAAS,MACTC,QAAS,MACTC,SAAU,OAEdC,QAAS,IAAM,IACfC,SAAU,CACNC,OAAQ,MACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,gBAAgB,EAChBK,wBAAwB,EACxBE,YAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,sBAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAAA,EACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;MC7CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,MACVC,QAAS,UACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,KACRI,SAAU,SACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,gBAAgB,EAChBO,YAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,sBAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAAA,EACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;MC9CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,gBAAgB,EAChBO,YAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,sBAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAAA,EACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;MC/CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,MACVC,QAAS,MACTC,QAAS,MACTC,SAAU,OAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,OACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAAA,EACAO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAAA,EACAG,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRX,kBACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;MA/CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,MACVC,QAAS,MACTC,QAAS,MACTC,SAAU,OAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,OACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAAA,EACAO,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAAA,EACAG,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRX,kBACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;MC9CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,OACVC,QAAS,MACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,WAIL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,OACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,gBAAgB,EAChBO,YAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,sBAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAAA,EACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;MCjDL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,OACVC,QAAS,MACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,WAIL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,gBAAgB,EAChBO,YAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,sBAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAAA,EACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;MCjDL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,OACVC,QAAS,OACTC,QAAS,OACTC,SAAU,QAEdC,QAAS,WACL,MAAO,GACV,EACDK,gBAAgB,EAChBJ,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,gBAAgB,EAChBK,0BACAE,SAAAA,GAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,kBACAO,SAAAA,GAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAAA,EACAG,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAAA,GAEJW,mBAAoB,CAChBH,OAAQ,WACRX,kBACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;eChDL,CACb1B,YAAa,KACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,OACVC,QAAS,OACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,IACRC,KAAM,QAAA;;;;;;eCjBG,CACbZ,YAAa,aACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,OACVC,QAAS,MACTC,QAAS,IACTC,SAAU,KAEdC,QAAS,IAAM,IACfC,SAAU,CACNC,OAAQ,MACRC,KAAM,QAAA;;;;;;MCfG,OAAAC,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,KACTC,SAAU,OAEdC,QAAS,IAAM,GACfC,SAAU,CACNC,OAAQ,KACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAO,SAAAA,GAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,sBAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAAA,EACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;MC5CL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,MACVC,QAAS,OACTC,QAAS,UACTC,SAAU,YAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,gBAAgB,EAChBO,YAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,sBAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAAA,EACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;;;MC5CtB,MAAMS,EAAW,CACb,EAAG,QACH,EAAG,QACH,EAAG,QACH,GAAI,QACJ,GAAI,QAEJ,EAAG,OACH,EAAG,OACH,GAAI,OACJ,GAAI,OAEJ,EAAG,QACH,EAAG,QACH,IAAK,QAEL,EAAG,OAEH,EAAG,QACH,GAAI,QACJ,GAAI,QAEJ,GAAI,QACJ,GAAI,QACJ,GAAI,SAGS,OAAAtB,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,MACVC,QAAS,SACTC,QAAS,SACTC,SAAU,WAEdC,QAASoB,IAEL,GAAe,IAAXA,EACA,MAAO,QAGX,IAAIO,EAAIP,EAAS,GAIjB,OAAOM,EAASC,IAAMD,EAHdN,EAAS,IAAMO,IAGcD,EAF7BN,GAAU,IAAM,IAAM,KAAA,EAIlCnB,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,gBAAAA,EACAK,wBAAAA,EACAE,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,kBACAO,SAAAA,GAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,sBAEJW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAAA,EACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;MCrFL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,OACVC,QAAS,MACTC,QAAS,OACTC,SAAU,OAEdC,QAAS,IAIE,GAEXC,SAAU,CACNC,OAAQ,IACRI,SAAU,UACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbJ,gBAAAA,EACAO,SAAAA,GAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVZ,gBAAgB,EAChBG,sBAEJU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRX,gBAAAA,EACAG,mBAAAA,EACAS,SAAU,KAAA;;;;;;MCjDL,OAAAb,EAAA,CACbb,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,KACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,IACRI,SAAU,SACVH,KAAM,OAEVI,eAAgB,CACZC,mBAAAA,EACAC,YAAa,EACbJ,gBAAAA,EACAO,SAAAA,GAEJC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbJ,gBAAgB,EAChBO,YAEJG,oBAAqB,CACjBP,mBAAAA,EACAS,SAAU,GAEdC,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRR,mBAAAA,EACAS,SAAU,KAAA;;;;;;eC3CL,CACb1B,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,KACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,MACRC,KAAM,QAAA;;;;;;eCjBG,CACbZ,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,KACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,IACRC,KAAM,QAAA;;;;;;eCjBG,CACbZ,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,IACVC,QAAS,KACTC,QAAS,KACTC,SAAU,KAEdC,QAAS,WACL,MAAO,GACV,EACDC,SAAU,CACNC,OAAQ,MACRC,KAAM,QAAA,8CCxBdyB,EAAY,GAAEC,EAAsCD,EAAQ,SAASE,EAAyCF,EAAQ,SAASG,EAAyCH,EAAQ,SAASI,EAAyCJ,EAAQ,SAASK,EAAyCL,EAAQ,SAASM,EAAyCN,EAAQ,SAASO,EAAyCP,EAAY,GAAEQ,EAAsCR,EAAQ,SAASS,EAAyCT,EAAQ,SAASU,EAAyCV,EAAQ,SAASW,EAAyCX,EAAQ,SAASY,EAAyCZ,EAAQ,SAASa,EAAyCb,EAAQ,SAASc,EAAyCd,EAAQ,SAASe,EAAyCf,EAAQ,SAASgB,EAAyChB,EAAQ,SAASiB,EAAyCjB,EAAQ,SAASkB,EAAyClB,EAAQ,SAASmB,EAAyCnB,EAAQ,SAASoB,EAAyCpB,EAAQ,SAASqB,EAAyCrB,EAAQ,SAASsB,EAAyCtB,EAAQ,SAASuB,EAAyCvB,EAAQ,SAASwB,EAAyCxB,EAAQ,SAASyB,EAAyCzB,EAAQ,SAAS0B,EAAyC1B,EAAQ,UAAU2B,GAA0C3B,EAAQ,SAAS4B,GAAyC5B,EAAQ,SAAS6B,GAAyC7B,EAAQ,SAAS8B,GAAyC9B,EAAQ,SAAS+B,GAAyC/B,EAAQ,SAASgC,GAAyChC,EAAY,GAAEiC,GAAsCjC,EAAQ,SAASkC,GAAyClC,EAAQ,SAASmC,GAAyCnC,EAAQ,SAASoC,GAAyCpC,EAAQ,SAASqC,GAAyCrC,EAAQ,SAASsC,GAAyCtC,EAAQ,SAASuC,GAAyCvC,EAAY,GAAEwC,GAAsCxC,EAAQ,SAASyC,GAAyCzC,EAAQ,SAAS0C,GAAyC1C,EAAY,GAAE2C,GAAsC3C,EAAQ,SAAS4C,GAAyC5C,EAAQ,SAAS6C,GAAyC7C,EAAQ,SAAS8C,GAAyC9C,EAAQ,SAAS+C,GAAyC/C,EAAY,GAAEgD,GAAsChD,EAAQ,SAASiD,GAAyCjD,EAAQ,SAASkD,GAAyClD,EAAQ,SAASmD,GAAyCnD,EAAY,GAAEoD,GAAsCpD,EAAQ,cAAcqD,GAA8CrD,EAAQ,SAASsD,GAAyCtD,EAAQ,SAASuD,GAAyCvD,EAAQ,SAASwD,GAAyCxD,EAAQ,SAASyD,GAAyCzD,EAAQ,SAAS0D,GAAyC1D,EAAQ,SAAS2D,GAAyC3D,EAAQ,SAAS4D,GAAyC5D,EAAQ,SAAS6D"}