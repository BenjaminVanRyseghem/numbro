{"version":3,"file":"tr-TR.min.js","sources":["../../languages/tr-TR.js"],"sourcesContent":["/*!\n * numbro.js language configuration\n * language : Turkish\n * locale : Turkey\n * author : Ecmel Ercan : https://github.com/ecmel,\n *          Erhan Gundogan : https://github.com/erhangundogan,\n *          Burak Yiğit Kaya: https://github.com/BYK\n */\n\nconst suffixes = {\n    1: \"'inci\",\n    5: \"'inci\",\n    8: \"'inci\",\n    70: \"'inci\",\n    80: \"'inci\",\n\n    2: \"'nci\",\n    7: \"'nci\",\n    20: \"'nci\",\n    50: \"'nci\",\n\n    3: \"'üncü\",\n    4: \"'üncü\",\n    100: \"'üncü\",\n\n    6: \"'ncı\",\n\n    9: \"'uncu\",\n    10: \"'uncu\",\n    30: \"'uncu\",\n\n    40: \"'ıncı\",\n    60: \"'ıncı\",\n    90: \"'ıncı\"\n};\n\nmodule.exports = {\n    languageTag: \"tr-TR\",\n    delimiters: {\n        thousands: \".\",\n        decimal: \",\"\n    },\n    abbreviations: {\n        thousand: \"bin\",\n        million: \"milyon\",\n        billion: \"milyar\",\n        trillion: \"trilyon\"\n    },\n    ordinal: number => {\n        // special case for zero\n        if (number === 0) {\n            return \"'ıncı\";\n        }\n\n        let a = number % 10;\n        let b = number % 100 - a;\n        let c = number >= 100 ? 100 : null;\n\n        return suffixes[a] || suffixes[b] || suffixes[c];\n    },\n    currency: {\n        symbol: \"\\u20BA\",\n        position: \"postfix\",\n        code: \"TRY\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true,\n        average: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true,\n            average: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            mantissa: 2,\n            spaceSeparated: true,\n            thousandSeparated: true\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            mantissa: 2,\n            thousandSeparated: true\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            spaceSeparated: true,\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n"],"names":["suffixes","languageTag","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","ordinal","number","a","currency","symbol","position","code","currencyFormat","thousandSeparated","totalLength","spaceSeparated","spaceSeparatedCurrency","average","formats","fourDigits","fullWithTwoDecimals","output","mantissa","fullWithTwoDecimalsNoCurrency","fullWithNoDecimals"],"mappings":";;;;;;;;IASA,MAAMA,EAAW,CACb,EAAG,QACH,EAAG,QACH,EAAG,QACH,GAAI,QACJ,GAAI,QAEJ,EAAG,OACH,EAAG,OACH,GAAI,OACJ,GAAI,OAEJ,EAAG,QACH,EAAG,QACH,IAAK,QAEL,EAAG,OAEH,EAAG,QACH,GAAI,QACJ,GAAI,QAEJ,GAAI,QACJ,GAAI,QACJ,GAAI,kBAGS,CACbC,YAAa,QACbC,WAAY,CACRC,UAAW,IACXC,QAAS,KAEbC,cAAe,CACXC,SAAU,MACVC,QAAS,SACTC,QAAS,SACTC,SAAU,WAEdC,QAASC,IAEL,GAAe,IAAXA,EACA,MAAO,QAGX,IAAIC,EAAID,EAAS,GAIjB,OAAOX,EAASY,IAAMZ,EAHdW,EAAS,IAAMC,IAGcZ,EAF7BW,GAAU,IAAM,IAAM,KAEkB,EAEpDE,SAAU,CACNC,OAAQ,IACRC,SAAU,UACVC,KAAM,OAEVC,eAAgB,CACZC,mBAAmB,EACnBC,YAAa,EACbC,gBAAgB,EAChBC,wBAAwB,EACxBC,SAAS,GAEbC,QAAS,CACLC,WAAY,CACRL,YAAa,EACbC,gBAAgB,EAChBE,SAAS,GAEbG,oBAAqB,CACjBC,OAAQ,WACRC,SAAU,EACVP,gBAAgB,EAChBF,mBAAmB,GAEvBU,8BAA+B,CAC3BD,SAAU,EACVT,mBAAmB,GAEvBW,mBAAoB,CAChBH,OAAQ,WACRN,gBAAgB,EAChBF,mBAAmB,EACnBS,SAAU"}